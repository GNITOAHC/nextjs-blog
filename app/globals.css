@import 'tailwindcss';

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-background: var(--background);
  --color-foreground: var(--foreground);

  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);

  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);

  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);

  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);

  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);

  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);

  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;
  @media (width >= --theme(--breakpoint-sm)) {
    max-width: none;
  }
  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

:root,
.dark {
  --background: hsl(222, 84%, 5%);
  --foreground: hsl(210, 40%, 98%);

  --card: hsl(222 73% 11%);
  --card-foreground: hsl(210 40% 98%);

  --popover: hsl(222.2 84% 4.9%);
  --popover-foreground: hsl(210 40% 98%);

  --primary: hsl(210 40% 98%);
  --primary-foreground: hsl(222.2 47.4% 11.2%);

  --secondary: hsl(217.2 32.6% 17.5%);
  --secondary-foreground: hsl(210 40% 98%);

  --muted: hsl(217.2 32.6% 17.5%);
  --muted-foreground: hsl(215 20.2% 65.1%);

  --accent: hsl(215 98% 61%);
  --accent-foreground: hsl(214 93% 62%);

  --destructive: hsl(0 62.8% 30.6%);
  --destructive-foreground: hsl(210 40% 98%);

  --border: hsl(217.2 32.6% 17.5%);
  --input: hsl(217.2 32.6% 17.5%);
  --ring: hsl(212.7 26.8% 83.9%);

  --radius: 0.5rem;
}

.light {
  --background: hsl(0 0% 100%);
  --foreground: hsl(222.2 84% 4.9%);

  --card: hsl(0 0% 100%);
  --card-foreground: hsl(222.2 84% 4.9%);

  --popover: hsl(0 0% 100%);
  --popover-foreground: hsl(222.2 84% 4.9%);

  --primary: hsl(40 100% 75%);
  --primary-foreground: hsl(222.2 84% 4.9%);

  --secondary: hsl(213 39% 45%);
  --secondary-foreground: hsl(222.2 47.4% 11.2%);

  --muted: hsl(210 40% 96.1%);
  --muted-foreground: hsl(215.4 16.3% 46.9%);

  --accent: hsl(199 100% 93%);
  --accent-foreground: hsl(212 92% 45%);

  --destructive: hsl(0 84.2% 60.2%);
  --destructive-foreground: hsl(210 40% 98%);

  --border: hsl(214.3 31.8% 91.4%);
  --input: hsl(214.3 31.8% 91.4%);
  --ring: hsl(222.2 84% 4.9%);

  --radius: 0.5rem;
}

@layer components {
  .prose {
    h1:not(h1.not-prose, .not-prose h1) {
      @apply scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl;
    }
    h2:not(h2.not-prose, .not-prose h2) {
      @apply mt-10 scroll-m-20 border-b pb-2 text-3xl font-semibold tracking-tight transition-colors first:mt-0 mb-2;
    }
    h3:not(.not-prose h3, .not-prose h3) {
      @apply mt-8 scroll-m-20 text-2xl font-semibold tracking-tight;
    }
    h4:not(.not-prose h4, .not-prose h4) {
      @apply scroll-m-20 text-xl font-semibold tracking-tight;
    }
    p:not(p.not-prose, .not-prose p) {
      @apply leading-7 [&:not(:first-child)]:mt-6;
    }
    blockquote:not(blockquote.not-prose, .not-prose blockquote) {
      @apply mt-6 border-l-2 pl-6 italic;
    }
    table:not(table.not-prose, .not-prose table) {
      @apply w-full;
    }
    tr:not(tr.not-prose, .not-prose tr) {
      @apply m-0 border-t p-0 even:bg-muted;
    }
    th:not(th.not-prose, .not-prose th) {
      @apply border px-4 py-2 text-left font-bold [&[align=center]]:text-center [&[align=right]]:text-right;
    }
    td:not(td.not-prose, .not-prose td) {
      @apply border px-4 py-2 text-left [&[align=center]]:text-center [&[align=right]]:text-right;
    }
    ul:not(ul.not-prose, .not-prose ul) {
      @apply my-6 ml-6 list-disc [&>li]:mt-2;
    }
    ol:not(ol.not-prose, .not-prose ol) {
      @apply my-6 ml-6 list-decimal [&>li]:mt-2;
    }
    pre:not(pre.not-prose, .not-prose pre) {
      @apply w-full overflow-y-scroll bg-[#1d283a] text-white rounded py-2 px-4 mb-4 mt-6;
    }
    a:not(a.not-prose, .not-prose a) {
      @apply hover:text-sky-200 underline;
    }
    /* code { */
    /*   @apply relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-sm font-semibold; */
    /* } */
  }
}

[aria-hidden='true'] {
  visibility: hidden;
  display: none;
}

/* For Webkit-based browsers (Chrome, Safari and Opera) */
*::-webkit-scrollbar {
  display: none;
}

/* For IE, Edge and Firefox */
* {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

/*
  ---break---
*/
@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}
